// Generated by CoffeeScript 1.9.3
var slice = [].slice,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

module.exports.command_pg_migrate = function(fragments_APPLICATION) {
  return fragments_APPLICATION(function(fragments_console, fragments_pgMigrate, fragments_shutdown, fragments_Promise) {
    return function() {
      var args, isDry, isVerbose;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      isVerbose = indexOf.call(args, '--verbose') >= 0;
      isDry = indexOf.call(args, '--dry') >= 0;
      return fragments_pgMigrate(isVerbose, isDry)["catch"](function(err) {
        fragments_console.log('shutting down because of error:', err);
        return fragments_shutdown().then(function() {
          return fragments_Promise.reject(err);
        });
      }).then(function() {
        return fragments_shutdown();
      }).then(function() {
        return fragments_console.log('OK');
      });
    };
  });
};

module.exports.command_pg_migrate.$help = '[--verbose] [--dry] - migrate';

module.exports.command_migrations_create = function(fragments_APPLICATION) {
  return fragments_APPLICATION(function(fragments_console, fragments_fs, fragments_path, fragments_moment, fragments_config_migrationPath, fragments_Promise) {
    return function(name) {
      var filename, filepath, time;
      if (name == null) {
        fragments_console.log('Usage: ... migrations:create {migration-name}');
        return;
      }
      time = fragments_moment().format('YYYYMMDDHHmmss');
      filename = time + "-" + name + ".sql";
      filepath = fragments_path.join(fragments_config_migrationPath, filename);
      fragments_console.log(filepath);
      return fragments_fs.mkdirAsync(fragments_config_migrationPath)["catch"](function(err) {
        if (err.cause.code !== 'EEXIST') {
          return fragments_Promise.reject(err);
        }
      }).then(function() {
        return fragments_fs.writeFileAsync(filepath, '');
      }).then(function() {
        return fragments_console.log('OK');
      });
    };
  });
};

module.exports.command_migrations_create.$help = '{migration-name}';

module.exports.command_pg_create = function(fragments_APPLICATION) {
  return fragments_APPLICATION(function(fragments_console, fragments_pgCreate, fragments_shutdown, fragments_Promise) {
    return function() {
      return fragments_pgCreate()["catch"](function(err) {
        fragments_console.log('shutting down because of error:', err);
        return fragments_shutdown().then(function() {
          return fragments_Promise.reject(err);
        });
      }).then(function() {
        return fragments_shutdown();
      }).then(function() {
        return fragments_console.log('OK');
      });
    };
  });
};

module.exports.command_pg_drop = function(fragments_APPLICATION) {
  return fragments_APPLICATION(function(fragments_console, fragments_pgDrop, fragments_shutdown, fragments_Promise) {
    return function() {
      return fragments_pgDrop()["catch"](function(err) {
        fragments_console.log('shutting down because of error:', err);
        return fragments_shutdown().then(function() {
          return fragments_Promise.reject(err);
        });
      }).then(function() {
        return fragments_shutdown();
      }).then(function() {
        return fragments_console.log('OK');
      });
    };
  });
};

module.exports.command_pg_dropCreate = function(fragments_APPLICATION) {
  return fragments_APPLICATION(function(fragments_console, fragments_pgDropCreate, fragments_shutdown, fragments_Promise) {
    return function() {
      return fragments_pgDropCreate()["catch"](function(err) {
        fragments_console.log('shutting down because of error:', err);
        return fragments_shutdown().then(function() {
          return fragments_Promise.reject(err);
        });
      }).then(function() {
        return fragments_shutdown();
      }).then(function() {
        return fragments_console.log('OK');
      });
    };
  });
};

module.exports.command_pg_dropCreateMigrate = function(fragments_APPLICATION) {
  return fragments_APPLICATION(function(fragments_console, fragments_pgDropCreateMigrate, fragments_shutdown, fragments_Promise) {
    return function() {
      return fragments_pgDropCreateMigrate()["catch"](function(err) {
        fragments_console.log('shutting down because of error:', err);
        return fragments_shutdown().then(function() {
          return fragments_Promise.reject(err);
        });
      }).then(function() {
        return fragments_shutdown();
      }).then(function() {
        return fragments_console.log('OK');
      });
    };
  });
};
