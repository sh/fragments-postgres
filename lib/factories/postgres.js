// Generated by CoffeeScript 1.10.0
module.exports.fragments_pg = function(fragments_Promise, fragments_config_postgresPoolSize, fragments_config_databaseUrl, fragments_onShutdown, fragments_pgDestroyPool) {
  var pg;
  pg = require('pg');
  pg.defaults.poolSize = fragments_config_postgresPoolSize;
  pg.defaults.parseInt8 = true;
  fragments_onShutdown('postgres', function() {
    return fragments_pgDestroyPool(pg, fragments_config_databaseUrl);
  });
  return pg;
};

module.exports.fragments_mesa = function(fragments_config_databaseUrl, fragments_pg) {
  return require('mesa').setConnection(function(cb) {
    return fragments_pg.connect(fragments_config_databaseUrl, cb);
  });
};

module.exports.fragments_pgDestroyPool = function(fragments_console, fragments_Promise) {
  return function(pg, databaseUrl) {
    var pool, poolKey;
    poolKey = JSON.stringify(databaseUrl);
    fragments_console.log('destroyPostgresPool');
    fragments_console.log('Object.keys(pg.pools.all)', Object.keys(pg.pools.all));
    fragments_console.log('poolKey', poolKey);
    pool = pg.pools.all[poolKey];
    fragments_console.log('pool?', pool != null);
    if (pool != null) {
      return new fragments_Promise(function(resolve, reject) {
        return pool.drain(function() {
          return pool.destroyAllNow(function() {
            delete pg.pools.all[poolKey];
            return resolve();
          });
        });
      });
    } else {
      return fragments_Promise.resolve();
    }
  };
};
